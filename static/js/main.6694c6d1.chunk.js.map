{"version":3,"sources":["rules/badminton.js","reducers/Reducer.js","rules/ruleHandler.js","AppContext.js","components/Header/Toolbar.js","components/Header/Players.js","components/Score/Score.js","components/Score/Alert.js","App.js","serviceWorker.js","index.js"],"names":["getWinner","score","playerOrder","player1","player2","getPlayerOrder","hasTwoPointLead","playerHasThirty","updateScore","scorer","updatePlayerScoreState","state","player","rules","game","badmintonRules","Error","getRules","newScore","scores","current","winner","showAlert","previous","next","reducer","action","type","payload","name","updatePlayerNameState","initialState","length","pop","undo","redo","closeAlert","AppContext","createContext","AppProvider","props","useReducer","dispatch","Provider","value","children","defaultProps","borderBottom","blueGrey","display","Toolbar","useContext","Grid","container","justify","Box","p","bgcolor","width","IconButton","aria-label","onClick","useStyles","makeStyles","theme","form","flexDirection","textField","flex","marginRight","spacing","border","Players","classes","className","noValidate","autoComplete","TextField","id","label","onChange","e","target","root","flexGrow","fontSize","Score","Alert","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","minHeight","backgroundColor","padding","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","Fragment","CssBaseline","document","getElementById","publicUrl","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6694c6d1.chunk.js","sourcesContent":["// TODO Be a better person, this is awful.\r\nconst getPlayerOrder = (score) => {\r\n    // TODO need something nicer than returning the string - player enum\r\n    if (score.player1 > score.player2) {\r\n        return ['player1', 'player2']; // It's late and I want this finished - TODO\r\n    } else if (score.player1 < score.player2) {\r\n        return ['player2', 'player1'];\r\n    }\r\n    return ['drawing'];\r\n};\r\n\r\nexport const getWinner = (score) => {\r\n    const playerOrder = getPlayerOrder(score);\r\n    if (playerOrder[0] === 'drawing') {\r\n        return null;\r\n    }\r\n    const hasTwoPointLead = score[playerOrder[0]] > 20 && score[playerOrder[0]] > score[playerOrder[1]] + 1;\r\n    const playerHasThirty = score[playerOrder[0]] === 30;\r\n    if (hasTwoPointLead || playerHasThirty) {\r\n        return playerOrder[0];\r\n    }\r\n    return null;\r\n};\r\n\r\nconst updateScore = (score, scorer) => {\r\n    if (getWinner(score) !== null) {\r\n        return null;\r\n    }\r\n    return score[scorer] + 1;\r\n};\r\n\r\nexport {\r\n    updateScore\r\n}\r\n    ","import { getRules } from '../rules/ruleHandler'; \r\nimport { initialState } from '../AppContext'; \r\n\r\nconst updatePlayerScoreState = (state, player) => {\r\n    const rules = getRules('badminton');\r\n    const newScore = rules.updateScore(state.scores.current, player);\r\n    \r\n    if (newScore === null) {\r\n        return state;\r\n    }\r\n    const current = { \r\n        ...state.scores.current,\r\n        [player]: newScore\r\n    }\r\n    const winner = rules.getWinner(current);\r\n    return {\r\n        ...state,\r\n        winner,\r\n        showAlert: winner !== null,\r\n        scores: {\r\n            previous: [...state.scores.previous, {...state.scores.current}],\r\n            current: current,\r\n            next: []\r\n        }\r\n    }\r\n};\r\n\r\nfunction updatePlayerNameState(state, action) {\r\n    if (!action.payload.name) {\r\n        return state;\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        [action.payload.player]: action.payload.name\r\n    };    \r\n};\r\n\r\nfunction undo(state) {\r\n    if (!state.scores.previous.length) {\r\n        return state;\r\n    }\r\n    const previous = [...state.scores.previous];\r\n    const current = previous.pop();\r\n    const next = [...state.scores.next, {...state.scores.current}]; \r\n\r\n    return {\r\n        ...state,\r\n        scores: {\r\n            previous,\r\n            current,\r\n            next\r\n        }\r\n    };    \r\n};\r\n\r\nfunction redo(state) {\r\n    if (!state.scores.next.length) {\r\n        return state;\r\n    }\r\n    const next = [...state.scores.next];\r\n    const current = next.pop();\r\n    const previous = [...state.scores.previous, {...state.scores.current}]; \r\n\r\n    return {\r\n        ...state,\r\n        scores: {\r\n            previous,\r\n            current,\r\n            next\r\n        }\r\n    };    \r\n};\r\n\r\nfunction closeAlert(state) {\r\n    return {\r\n        ...state,\r\n        showAlert: false\r\n    }\r\n}\r\n\r\nexport function reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'updateScore':\r\n            return updatePlayerScoreState(state, action.payload);    \r\n        case 'updatePlayerName':\r\n            return updatePlayerNameState(state, action);   \r\n        case 'reset':\r\n            return  { ...initialState }\r\n        case 'undo':\r\n            return  undo(state)\r\n        case 'redo':\r\n            return  redo(state)\r\n        case 'closeAlert':\r\n            return  closeAlert(state)\r\n        default:\r\n            throw new Error();\r\n    }\r\n};","import * as badmintonRules from './badminton'\r\n\r\nconst getRules = (game) => {\r\n    // TODO add other game rules\r\n    if (game) {\r\n        return badmintonRules;\r\n    }\r\n\r\n    throw new Error('pass required rules');\r\n};\r\n\r\nexport {\r\n    getRules\r\n}","import React, {createContext, useReducer} from 'react';\r\n\r\nimport { reducer } from './reducers/Reducer';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const initialState = {\r\n    player1: 'Ant',\r\n    player2: 'Felix',\r\n    winner: null,\r\n    showAlert: false,\r\n    scores: {\r\n        previous: [],\r\n        current: {\r\n            player1: 0,\r\n            player2: 0\r\n        },\r\n        next: []\r\n    }\r\n};\r\n\r\nexport const AppProvider = props => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return (\r\n        <AppContext.Provider value={{state, dispatch}}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n};\r\n","import React, { useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\n\r\nimport { AppContext } from '../../AppContext';\r\n\r\nconst defaultProps = {\r\n    borderBottom: `1px solid ${blueGrey[800]}`,\r\n    display: 'flex' \r\n};\r\n\r\nfunction Toolbar() {\r\n    const { dispatch } = useContext(AppContext);\r\n    return (\r\n        <Grid container justify=\"flex-start\">\r\n            <Box p={2 }bgcolor={blueGrey[700]} width={1} {...defaultProps}>\r\n                <IconButton aria-label=\"refresh\" onClick={ () => { dispatch({type: 'reset'}) }} >\r\n                    <RefreshIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"undo\" onClick={ () => { dispatch({type: 'undo'}) }} >\r\n                    <UndoIcon />\r\n                </IconButton>\r\n                <IconButton aria-label=\"redo\" onClick={ () => { dispatch({type: 'redo'}) }} >\r\n                    <RedoIcon />\r\n                </IconButton>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Toolbar;\r\n\r\n","import React, { useContext } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../AppContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        display: 'flex', \r\n        flexDirection: 'row'\r\n    },\r\n    textField: {\r\n        flex: '1',\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    border: {\r\n        borderBottom: `1px solid ${blueGrey[700]}`\r\n    }\r\n}));\r\n\r\n\r\nfunction Players() {\r\n    const classes = useStyles();\r\n    const { state, dispatch } = useContext(AppContext);\r\n    return (\r\n        <Box p={2} bgcolor={blueGrey[500]} width={1} className={classes.border}>\r\n            <form className={classes.form} noValidate autoComplete=\"off\">\r\n                <TextField id=\"player1\" label=\"Player 1\" value={state.player1} className={classes.textField} onChange={(e) => { dispatch({type: 'updatePlayerName', payload: { player: 'player1', name: e.target.value }}) }}/>\r\n                <TextField id=\"player2\" label=\"Player 2\" value={state.player2} className={classes.textField} onChange={(e) => { dispatch({type: 'updatePlayerName', payload: { player: 'player2', name: e.target.value }}) }}/>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Players;\r\n\r\n","import React, { useContext } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppContext } from '../../AppContext'; \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex', \r\n        flexDirection: 'row',\r\n        flexGrow: '1'\r\n    },\r\n    score: {\r\n        flex: '1',\r\n        fontSize: '3rem'\r\n    }\r\n}));\r\n\r\n\r\nfunction Score() {\r\n    const classes = useStyles();\r\n    const {state, dispatch} = useContext(AppContext);\r\n    return (\r\n        <Box p={2} bgcolor={blueGrey[300]} width={1} className={classes.root}>\r\n            <Box className={classes.score} onClick={() => { dispatch({type: 'updateScore', payload: 'player1' }) }} >{state.scores.current.player1}</Box>\r\n            <Box className={classes.score} onClick={() => { dispatch({type: 'updateScore', payload: 'player2' }) }} >{state.scores.current.player2}</Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Score;","import React, { useContext } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport { AppContext } from '../../AppContext'; \r\n\r\nfunction Alert() {\r\n\r\n    const {state, dispatch} = useContext(AppContext);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        dispatch({type: 'closeAlert'});\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={state.showAlert} autoHideDuration={12000} onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\r\n            <MuiAlert severity=\"success\" onClose={handleClose}>{`${state[state.winner]} WINS`}</MuiAlert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport Box from '@material-ui/core/Container';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { AppProvider } from './AppContext';\r\nimport Header from './components/Header/Toolbar';\r\nimport Players from './components/Header/Players';\r\nimport Score from './components/Score/Score';\r\nimport Alert from './components/Score/Alert';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex', \r\n        flexDirection: 'column',\r\n        minHeight: '100vh',\r\n        backgroundColor: blueGrey[300],\r\n        padding: '0'\r\n    }\r\n});\r\n\r\nfunction App() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.root}>\r\n            <AppProvider>\r\n                <Header />\r\n                <Players />\r\n                <Score />\r\n                <Alert />\r\n            </AppProvider>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n        console.log(`public url: ${publicUrl.origin}`);\r\n        console.log(`location url: ${window.location.origin}`);\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first by a service worker');\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'fontsource-roboto';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <App />\r\n        </React.Fragment>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}